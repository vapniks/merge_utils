% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_utils.R
\name{recodeMatches}
\alias{recodeMatches}
\title{Recode values of variable/factor matching patterns}
\usage{
recodeMatches(x, patterns, targets, default = NULL, keep.na = TRUE,
  ignore.case = TRUE, ignore.punc = TRUE, ...)
}
\arguments{
\item{x}{The character vector/factor to recode.}

\item{patterns}{List of regular expressions for matching.}

\item{targets}{Values to recode corresponding matches in 'patterns' into.}

\item{default}{Default target value for those values of x that don't match any pattern.
When default=NULL, non-matching values of x will be kept in the output.}

\item{keep.na}{If TRUE then NA's in x will be retained in the output.}

\item{ignore.case}{If TRUE (default) then matching is not case sensitive.}

\item{ignore.punc}{If TRUE (default) then punctuation will be ignored when matching.}

\item{...}{optional arguments to grepl (e.g. use fixed=TRUE for string instead of regexp matching)}
}
\value{
A vector
}
\description{
Recode values of variable/factor matching patterns
}
\details{
This function is like 'recodeVar' except that it uses regular expressions to match
the source variables (using 'grepl'). For each unique value of 'x' the regexps in 'patterns' are
tried in turn until a match is found, then the corresponding element of 'targets' is used to recode
the value. If length(patterns) > length(targets) then the final target will be used for all
excess patterns. The 'default' and 'keep.na' parameters are the same as for 'recodeVar'.
To do string matching instead of regular expression matching use fixed=TRUE
}
\seealso{
\code{\link{recode}} for recoding numbers (in library(car)), \code{\link{recodeVar}}, \code{\link{recodeAs}},
\code{\link{colwise2}} for recoding multiple dataframe columns simultaneously (in library(plyr)).
}
\author{
Ben Veal
}
