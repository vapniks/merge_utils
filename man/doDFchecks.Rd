% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_utils.R
\name{doDFchecks}
\alias{doDFchecks}
\title{Perform multiple sets of predefined tests on a dataframe}
\usage{
doDFchecks(df, ...)
}
\arguments{
\item{df}{A dataframe on which to perform the checks.}

\item{...}{Lists of arguments, or individual arguments for \code{\link{checkDF}}}
}
\description{
This function allows you to pass in lists of arguments defining tests on different variables
of a dataframe. Each list should contain "vars" and "checks" named arguments, along with other named arguments
to be passed to the \code{\link{checkDF}} function. You can also pass single named arguments for \code{\link{checkDF}}
which will be checked separately at the end.
}
\details{
A test specification takes the form of a list of named arguments to \code{\link{checkDF}}.
Each list containing "vars" and "checks" named arguments will invoke a separate call to the \code{\link{checkDF}} 
function, and the matching columns of df will be checked. Any other named arguments will be aggregated
together and used in a single call to \code{\link{checkDF}} after all the variable specific checks have finished.
If the same named argument (apart from "vars" and "checks") appears more than once (either in different lists, or separately)
it will only be used once at the end. This means you can create predefined test specifications and use them together,
without worrying about overlap.
This is useful when you need to check multiple dataframes which may share some data of the same type. In this case you can
predefine tests for the different types of variables, and perhaps also some general tests about the dimensions of the
dataframe, number of missing values etc. Then for each dataframe you can call this function with the appropriate test
specifications.
See the examples section for examples of how to define test specifications.
}
\author{
Ben Veal
}
\keyword{misc}
\keyword{utilities}
